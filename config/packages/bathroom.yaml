sensor:
  - platform: template
    sensors:
      bathroom_zooz_battery:
        friendly_name: "Bathroom Sensor Battery"
        unit_of_measurement: "%"
        value_template: >
          {% set battery = state_attr('zwave.zooz_zse40_4in1_sensor_3', 'battery_level') %}
          {{ battery }}
        icon_template: >
          {% set battery = state_attr('zwave.zooz_zse40_4in1_sensor_3', 'battery_level') | int %}
          {% if battery > 90 %}
            mdi:battery
          {% elif battery > 80 %}
            mdi:battery-90
          {% elif battery > 70 %}
            mdi:battery-80
          {% elif battery > 60 %}
            mdi:battery-70
          {% elif battery > 50 %}
            mdi:battery-60
          {% elif battery > 40 %}
            mdi:battery-50
          {% elif battery > 30 %}
            mdi:battery-40
          {% else %}
            mdi:battery-outline
          {% endif %}
        entity_id: zwave.zooz_zse40_4in1_sensor_3

binary_sensor:
  - platform: template
    sensors:
      bathroom_motion:
        value_template: "{{ states('sensor.zooz_zse40_4in1_sensor_alarm_level') | int > 0 }}"
        friendly_name: "Bathroom Motion"
        device_class: motion
        entity_id: sensor.zooz_zse40_4in1_sensor_alarm_level
      shower_on:
        value_template: "{{ states('sensor.zooz_zse40_4in1_sensor_relative_humidity_2') | float - states('sensor.hallway_thermostat_humidity') | float > 15 }}"
        friendly_name: "Shower On"
        entity_id: sensor.zooz_zse40_4in1_sensor_relative_humidity_2

automation:
  - alias: 'Bathroom Motion - Light On (Day)'
    trigger:
      platform: state
      entity_id: binary_sensor.bathroom_motion
      to: 'on'
    condition:
      condition: and
      conditions:
         - condition: template
           value_template: "{{ not is_state('input_select.house_mode', 'night') }}"
         - condition: state
           entity_id: light.main_bathroom_vanity_lights
           state: 'off'
    action:
      data:
        entity_id: light.main_bathroom_vanity_lights
        brightness_pct: 50
      service: light.turn_on
      entity_id: light.main_bathroom_vanity_lights

  - alias: 'Bathroom Motion - Light On (Night)'
    trigger:
      platform: state
      entity_id: binary_sensor.bathroom_motion
      to: 'on'
    condition:
      condition: and
      conditions:
         - condition: state
           entity_id: input_select.house_mode
           state: 'night'
         - condition: state
           entity_id: light.main_bathroom_vanity_lights
           state: 'off'
    action:
      data:
        entity_id: light.main_bathroom_vanity_lights
        brightness_pct: 10
      service: light.turn_on
      entity_id: light.main_bathroom_vanity_lights

  - alias: 'Bathroom Motion - Light Off'
    trigger:
      platform: state
      entity_id: binary_sensor.bathroom_motion
      to: 'off'
      for:
        minutes: 15
    condition:
      condition: state
      entity_id: switch.main_bathroom_exhaust_fan
      state: 'off'
    action:
      service: light.turn_off
      entity_id: light.main_bathroom_vanity_lights

  - alias: 'Bathroom Shower/Motion - Light Off'
    trigger:
      platform: state
      entity_id: binary_sensor.shower_on
      to: 'off'
    condition:
      condition: state
      entity_id: binary_sensor.bathroom_motion
      state: 'off'
    action:
      service: light.turn_off
      entity_id: light.main_bathroom_vanity_lights

  # FIXME: Not reliable
  #
  #- alias: 'Shower - Exhaust Fan On'
  #  trigger:
  #    platform: state
  #    entity_id: binary_sensor.shower_on
  #    to: 'on'
  #  action:
  #    service: switch.turn_on
  #    entity_id: switch.main_bathroom_exhaust_fan

  - alias: 'Shower - Exhaust Fan Off'
    trigger:
      platform: state
      entity_id: binary_sensor.shower_on
      to: 'off'
    action:
      service: switch.turn_off
      entity_id: switch.main_bathroom_exhaust_fan
